{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jae2s\\\\Documents\\\\git_pocamaze\\\\front_end\\\\src\\\\components\\\\add.component.js\";\nimport React, { Component } from \"react\";\nimport UserDataService from \"../services/user.service\";\nexport default class AddUser extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeAnswer = this.onChangeAnswer.bind(this);\n    this.saveUser = this.saveUser.bind(this);\n    this.newUser = this.newUser.bind(this);\n    this.getIP = this.getIP.bind(this);\n    this.state = {\n      id: null,\n      answer: \"\",\n      ip: \"\",\n      time: \"\",\n      submitted: false\n    };\n  }\n\n  getIP() {\n    const {\n      networkInterfaces\n    } = require('os');\n\n    const nets = networkInterfaces();\n    var results = Object.create(null);\n\n    for (const name of Object.keys(nets)) {\n      for (const net of nets[name]) {\n        // skip over non-ipv4 and internal (i.e. 127.0.0.1) addresses\n        if (net.family === 'IPv4' && !net.internal) {\n          if (!results[name]) {\n            results[name] = [];\n          }\n\n          results[name].push(net.address);\n        }\n      }\n    }\n\n    this.setState({\n      ip: results[\"en0\"][0]\n    });\n  }\n\n  onChangeAnswer(e) {\n    this.setState({\n      answer: e.target.value\n    });\n  }\n\n  saveUser() {\n    var data = {\n      answer: this.state.answer\n    };\n    UserDataService.create(data).then(response => {\n      this.setState({\n        id: response.data.id,\n        ip: response.data.ip,\n        answer: response.data.answer,\n        time: response.data.time,\n        submitted: true\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  newUser() {\n    this.setState({\n      id: null,\n      ip: \"\",\n      answer: \"\",\n      time: \"\",\n      submitted: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, this.state.submitted ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"You submitted successfully!\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.newUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Add\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"answer\",\n      required: true,\n      value: this.state.answer,\n      onChange: this.onChangeAnswer,\n      name: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveUser,\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jae2s/Documents/git_pocamaze/front_end/src/components/add.component.js"],"names":["React","Component","UserDataService","AddUser","constructor","props","onChangeAnswer","bind","saveUser","newUser","getIP","state","id","answer","ip","time","submitted","networkInterfaces","require","nets","results","Object","create","name","keys","net","family","internal","push","address","setState","e","target","value","data","then","response","console","log","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UserDataService from \"../services/user.service\";\r\n\r\nexport default class AddUser extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeAnswer = this.onChangeAnswer.bind(this);\r\n    this.saveUser = this.saveUser.bind(this);\r\n    this.newUser = this.newUser.bind(this);\r\n    this.getIP = this.getIP.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      answer:\"\",\r\n      ip: \"\",\r\n      time:\"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  getIP() {    \r\n    const { networkInterfaces } = require('os');\r\n    const nets = networkInterfaces();\r\n    var results = Object.create(null);\r\n\r\n    for (const name of Object.keys(nets)) {\r\n      for (const net of nets[name]) {\r\n          // skip over non-ipv4 and internal (i.e. 127.0.0.1) addresses\r\n          if (net.family === 'IPv4' && !net.internal) {\r\n              if (!results[name]) {\r\n                  results[name] = [];\r\n              }\r\n              results[name].push(net.address);\r\n          }\r\n      }\r\n    }\r\n    this.setState({\r\n      ip:results[\"en0\"][0]\r\n    });\r\n  }\r\n  \r\n  onChangeAnswer(e) {\r\n    this.setState({\r\n      answer: e.target.value\r\n    });\r\n  }\r\n\r\n  saveUser() {\r\n    var data = {\r\n      answer: this.state.answer,\r\n    };\r\n\r\n    UserDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          ip: response.data.ip,\r\n          answer:response.data.answer,\r\n          time: response.data.time,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newUser() {\r\n    this.setState({\r\n      id: null,\r\n      ip: \"\",\r\n      answer:\"\",\r\n      time: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"submit-form\">\r\n          {this.state.submitted ? (\r\n            <div>\r\n              <h4>You submitted successfully!</h4>\r\n              <button className=\"btn btn-success\" onClick={this.newUser}>\r\n                Add\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"answer\">Answer</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"answer\"\r\n                  required\r\n                  value={this.state.answer}\r\n                  onChange={this.onChangeAnswer}\r\n                  name=\"answer\"\r\n                />\r\n              </div>\r\n  \r\n              <button onClick={this.saveUser} className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}